name: Build Rocket Chat and pull to GCR

on: [workflow_dispatch]

env:
  CI: true
  TOOL_NODE_FLAGS: --max_old_space_size=4096
  
jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Github Info
        run: |
          echo "GITHUB_ACTION: $GITHUB_ACTION"
          echo "GITHUB_ACTOR: $GITHUB_ACTOR"
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
          echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
          echo "github.event_name: ${{ github.event_name }}"
          cat $GITHUB_EVENT_PATH
      - name: Use Node.js 14.18.3
        uses: actions/setup-node@v3
        with:
          node-version: '14.18.3'

      - uses: actions/checkout@v3

      - name: Free disk space
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          df -h
        #  docker rmi $(docker image ls -aq)
          
      - name: check package-lock
        run: |
          npx package-lock-check
          
      - name: Install Meteor
        run: |
          command -v meteor >/dev/null 2>&1 || curl https://install.meteor.com | sed s/--progress-bar/-sL/g | /bin/sh
          
      - name: Versions
        run: |
          npm --versions
          node -v
          meteor --version
          meteor npm --versions
          meteor node -v
          git version
          
      - name: npm install
        run: |
          meteor npm install
          cd ./ee/server/services
          npm install
          cd -
      
      - name: Reset Meteor
        run: |
          meteor reset
      
      - name: Build Rocket.Chat
        run: |
          meteor build --server-only --directory /tmp/build-test
      
      - name: Set docker and GCR variables
        run: |
              echo "DOCKERFILE_PATH=${GITHUB_WORKSPACE}/.docker/Dockerfile" >> $GITHUB_ENV;
              echo "IMAGE_NAME=rocket-chat" >> $GITHUB_ENV;
              echo "IMAGE_TAG=$GITHUB_SHA" >> $GITHUB_ENV;
              echo "GCR_REGION=gcr.io" >> $GITHUB_ENV;
              echo "GOOGLE_PROJECT_ID=hale-carport-345014" >> $GITHUB_ENV; 
      - name: Build Rocket Chat tagged docker image
        run: |
          echo "IMAGE_NAME: $IMAGE_NAME"
          echo "IMAGE_TAG: $IMAGE_TAG"
          echo "GCR_REGION: $GCR_REGION"
          echo "GOOGLE_PROJECT_ID: $GOOGLE_PROJECT_ID"
          cd /tmp/build-test
          cp $DOCKERFILE_PATH ./Dockerfile
          docker build -t $GCR_REGION/$GOOGLE_PROJECT_ID/$IMAGE_NAME:$IMAGE_TAG .
          docker images       
      # raccoondev/push-docker-gcr code: https://github.com/RaccoonDev/push-docker-gcr/blob/master/entrypoint.sh
      - name: Push Docker image to GCR
        uses: raccoondev/push-docker-gcr@v1
        with:
         gcr_host: ${{ env.GCR_REGION }}
         image_name: "${{ env.IMAGE_NAME}}"
         image_tag: "${{ env.IMAGE_TAG }}"
        env:
           GCLOUD_SERVICE_KEY: ${{ secrets.GCR_KEY }}
